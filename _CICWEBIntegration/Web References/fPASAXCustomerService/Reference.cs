//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace _CICWEBIntegration.fPASAXCustomerService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    // CODEGEN: No methods were found in the WSDL for this protocol.
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="serviceEndpoint", Namespace="http://tempuri.org/")]
    public partial class serviceEndpoint : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public serviceEndpoint() {
            this.Url = global::_CICWEBIntegration.Properties.Settings.Default._CICWEBIntegration_fPASAXCustomerService_RoutingService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_CICFPASCustomerCreationService", Namespace="http://tempuri.org/")]
    public partial class BasicHttpBinding_CICFPASCustomerCreationService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private CallContext callContextValueField;
        
        private System.Threading.SendOrPostCallback createNewCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback findCustomerOperationCompleted;
        
        private System.Threading.SendOrPostCallback updateCustomerOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BasicHttpBinding_CICFPASCustomerCreationService() {
            this.Url = global::_CICWEBIntegration.Properties.Settings.Default._CICWEBIntegration_fPASAXCustomerService_RoutingService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public CallContext CallContextValue {
            get {
                return this.callContextValueField;
            }
            set {
                this.callContextValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event createNewCustomerCompletedEventHandler createNewCustomerCompleted;
        
        /// <remarks/>
        public event findCustomerCompletedEventHandler findCustomerCompleted;
        
        /// <remarks/>
        public event updateCustomerCompletedEventHandler updateCustomerCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CallContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CICFPASCustomerCreationService/createNewCustomer", RequestElementName="CICFPASCustomerCreationServiceCreateNewCustomerRequest", RequestNamespace="http://tempuri.org", ResponseElementName="CICFPASCustomerCreationServiceCreateNewCustomerResponse", ResponseNamespace="http://tempuri.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("response", IsNullable=true)]
        public string createNewCustomer(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string accountNum, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string firstName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string middleName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string lastName, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string gender, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string maritalStatus, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string country, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string zipCode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phoneNum, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string emailAddress, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string bankAccountNum, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string bankAccountId, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string kraPin, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string custgroup, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string recordtype) {
            object[] results = this.Invoke("createNewCustomer", new object[] {
                        accountNum,
                        firstName,
                        middleName,
                        lastName,
                        gender,
                        maritalStatus,
                        country,
                        zipCode,
                        phoneNum,
                        emailAddress,
                        id,
                        bankAccountNum,
                        bankAccountId,
                        kraPin,
                        custgroup,
                        recordtype});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createNewCustomerAsync(
                    string accountNum, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string gender, 
                    string maritalStatus, 
                    string country, 
                    string zipCode, 
                    string phoneNum, 
                    string emailAddress, 
                    string id, 
                    string bankAccountNum, 
                    string bankAccountId, 
                    string kraPin, 
                    string custgroup, 
                    string recordtype) {
            this.createNewCustomerAsync(accountNum, firstName, middleName, lastName, gender, maritalStatus, country, zipCode, phoneNum, emailAddress, id, bankAccountNum, bankAccountId, kraPin, custgroup, recordtype, null);
        }
        
        /// <remarks/>
        public void createNewCustomerAsync(
                    string accountNum, 
                    string firstName, 
                    string middleName, 
                    string lastName, 
                    string gender, 
                    string maritalStatus, 
                    string country, 
                    string zipCode, 
                    string phoneNum, 
                    string emailAddress, 
                    string id, 
                    string bankAccountNum, 
                    string bankAccountId, 
                    string kraPin, 
                    string custgroup, 
                    string recordtype, 
                    object userState) {
            if ((this.createNewCustomerOperationCompleted == null)) {
                this.createNewCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateNewCustomerOperationCompleted);
            }
            this.InvokeAsync("createNewCustomer", new object[] {
                        accountNum,
                        firstName,
                        middleName,
                        lastName,
                        gender,
                        maritalStatus,
                        country,
                        zipCode,
                        phoneNum,
                        emailAddress,
                        id,
                        bankAccountNum,
                        bankAccountId,
                        kraPin,
                        custgroup,
                        recordtype}, this.createNewCustomerOperationCompleted, userState);
        }
        
        private void OncreateNewCustomerOperationCompleted(object arg) {
            if ((this.createNewCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createNewCustomerCompleted(this, new createNewCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CallContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CICFPASCustomerCreationService/findCustomer", RequestElementName="CICFPASCustomerCreationServiceFindCustomerRequest", RequestNamespace="http://tempuri.org", ResponseElementName="CICFPASCustomerCreationServiceFindCustomerResponse", ResponseNamespace="http://tempuri.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("response", IsNullable=true)]
        public string findCustomer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string kraPin, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string custGroup, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Id) {
            object[] results = this.Invoke("findCustomer", new object[] {
                        kraPin,
                        custGroup,
                        Id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void findCustomerAsync(string kraPin, string custGroup, string Id) {
            this.findCustomerAsync(kraPin, custGroup, Id, null);
        }
        
        /// <remarks/>
        public void findCustomerAsync(string kraPin, string custGroup, string Id, object userState) {
            if ((this.findCustomerOperationCompleted == null)) {
                this.findCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindCustomerOperationCompleted);
            }
            this.InvokeAsync("findCustomer", new object[] {
                        kraPin,
                        custGroup,
                        Id}, this.findCustomerOperationCompleted, userState);
        }
        
        private void OnfindCustomerOperationCompleted(object arg) {
            if ((this.findCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findCustomerCompleted(this, new findCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CallContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CICFPASCustomerCreationService/updateCustomer", RequestElementName="CICFPASCustomerCreationServiceUpdateCustomerRequest", RequestNamespace="http://tempuri.org", ResponseElementName="CICFPASCustomerCreationServiceUpdateCustomerResponse", ResponseNamespace="http://tempuri.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("response", IsNullable=true)]
        public string updateCustomer([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string kraPin, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string accountNum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string country, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string postAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phoneNum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string emailAddress, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string acountname, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string bankAccountNum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string bankAccountId, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string custGroup, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string bankbranchcode) {
            object[] results = this.Invoke("updateCustomer", new object[] {
                        kraPin,
                        accountNum,
                        country,
                        postAddress,
                        phoneNum,
                        emailAddress,
                        acountname,
                        bankAccountNum,
                        bankAccountId,
                        custGroup,
                        id,
                        bankbranchcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateCustomerAsync(string kraPin, string accountNum, string country, string postAddress, string phoneNum, string emailAddress, string acountname, string bankAccountNum, string bankAccountId, string custGroup, string id, string bankbranchcode) {
            this.updateCustomerAsync(kraPin, accountNum, country, postAddress, phoneNum, emailAddress, acountname, bankAccountNum, bankAccountId, custGroup, id, bankbranchcode, null);
        }
        
        /// <remarks/>
        public void updateCustomerAsync(string kraPin, string accountNum, string country, string postAddress, string phoneNum, string emailAddress, string acountname, string bankAccountNum, string bankAccountId, string custGroup, string id, string bankbranchcode, object userState) {
            if ((this.updateCustomerOperationCompleted == null)) {
                this.updateCustomerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateCustomerOperationCompleted);
            }
            this.InvokeAsync("updateCustomer", new object[] {
                        kraPin,
                        accountNum,
                        country,
                        postAddress,
                        phoneNum,
                        emailAddress,
                        acountname,
                        bankAccountNum,
                        bankAccountId,
                        custGroup,
                        id,
                        bankbranchcode}, this.updateCustomerOperationCompleted, userState);
        }
        
        private void OnupdateCustomerOperationCompleted(object arg) {
            if ((this.updateCustomerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateCustomerCompleted(this, new updateCustomerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/dynamics/2010/01/datacontracts")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/dynamics/2010/01/datacontracts", IsNullable=true)]
    public partial class CallContext : System.Web.Services.Protocols.SoapHeader {
        
        private string companyField;
        
        private string languageField;
        
        private string logonAsUserField;
        
        private string messageIdField;
        
        private string partitionKeyField;
        
        private ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] propertyBagField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LogonAsUser {
            get {
                return this.logonAsUserField;
            }
            set {
                this.logonAsUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MessageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PartitionKey {
            get {
                return this.partitionKeyField;
            }
            set {
                this.partitionKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("KeyValueOfstringstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] PropertyBag {
            get {
                return this.propertyBagField;
            }
            set {
                this.propertyBagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
    public partial class ArrayOfKeyValueOfstringstringKeyValueOfstringstring {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void createNewCustomerCompletedEventHandler(object sender, createNewCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createNewCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createNewCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void findCustomerCompletedEventHandler(object sender, findCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void updateCustomerCompletedEventHandler(object sender, updateCustomerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateCustomerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateCustomerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591