//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace _CICWEBIntegration.fPASAXVendorServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    // CODEGEN: No methods were found in the WSDL for this protocol.
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="serviceEndpoint", Namespace="http://tempuri.org/")]
    public partial class serviceEndpoint : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public serviceEndpoint() {
            this.Url = global::_CICWEBIntegration.Properties.Settings.Default._CICWEBIntegration_ERPFPASTEst_RoutingService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    // CODEGEN: The optional WSDL extension element 'PolicyReference' from namespace 'http://schemas.xmlsoap.org/ws/2004/09/policy' was not handled.
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="BasicHttpBinding_CICFPASVendorCreationService", Namespace="http://tempuri.org/")]
    public partial class BasicHttpBinding_CICFPASVendorCreationService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private CallContext callContextValueField;
        
        private System.Threading.SendOrPostCallback updateVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback findVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback createNewVendorOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public BasicHttpBinding_CICFPASVendorCreationService() {
            this.Url = global::_CICWEBIntegration.Properties.Settings.Default._CICWEBIntegration_ERPFPASTEst_RoutingService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public CallContext CallContextValue {
            get {
                return this.callContextValueField;
            }
            set {
                this.callContextValueField = value;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event updateVendorCompletedEventHandler updateVendorCompleted;
        
        /// <remarks/>
        public event findVendorCompletedEventHandler findVendorCompleted;
        
        /// <remarks/>
        public event createNewVendorCompletedEventHandler createNewVendorCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CallContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CICFPASVendorCreationService/updateVendor", RequestElementName="CICFPASVendorCreationServiceUpdateVendorRequest", RequestNamespace="http://tempuri.org", ResponseElementName="CICFPASVendorCreationServiceUpdateVendorResponse", ResponseNamespace="http://tempuri.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("response", IsNullable=true)]
        public string updateVendor([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string krapin, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string vendgroup, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Id, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string accountNum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string firstname, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string postalstreet, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phone, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fax, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string url, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string bankcode, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string bankaccnum, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string bankbranchcode) {
            object[] results = this.Invoke("updateVendor", new object[] {
                        krapin,
                        vendgroup,
                        Id,
                        accountNum,
                        firstname,
                        postalstreet,
                        phone,
                        email,
                        fax,
                        url,
                        bankcode,
                        bankaccnum,
                        bankbranchcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void updateVendorAsync(string krapin, string vendgroup, string Id, string accountNum, string firstname, string postalstreet, string phone, string email, string fax, string url, string bankcode, string bankaccnum, string bankbranchcode) {
            this.updateVendorAsync(krapin, vendgroup, Id, accountNum, firstname, postalstreet, phone, email, fax, url, bankcode, bankaccnum, bankbranchcode, null);
        }
        
        /// <remarks/>
        public void updateVendorAsync(string krapin, string vendgroup, string Id, string accountNum, string firstname, string postalstreet, string phone, string email, string fax, string url, string bankcode, string bankaccnum, string bankbranchcode, object userState) {
            if ((this.updateVendorOperationCompleted == null)) {
                this.updateVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnupdateVendorOperationCompleted);
            }
            this.InvokeAsync("updateVendor", new object[] {
                        krapin,
                        vendgroup,
                        Id,
                        accountNum,
                        firstname,
                        postalstreet,
                        phone,
                        email,
                        fax,
                        url,
                        bankcode,
                        bankaccnum,
                        bankbranchcode}, this.updateVendorOperationCompleted, userState);
        }
        
        private void OnupdateVendorOperationCompleted(object arg) {
            if ((this.updateVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.updateVendorCompleted(this, new updateVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CallContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CICFPASVendorCreationService/findVendor", RequestElementName="CICFPASVendorCreationServiceFindVendorRequest", RequestNamespace="http://tempuri.org", ResponseElementName="CICFPASVendorCreationServiceFindVendorResponse", ResponseNamespace="http://tempuri.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("response", IsNullable=true)]
        public string findVendor([System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string krapin, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string vendgroup, [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string id) {
            object[] results = this.Invoke("findVendor", new object[] {
                        krapin,
                        vendgroup,
                        id});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void findVendorAsync(string krapin, string vendgroup, string id) {
            this.findVendorAsync(krapin, vendgroup, id, null);
        }
        
        /// <remarks/>
        public void findVendorAsync(string krapin, string vendgroup, string id, object userState) {
            if ((this.findVendorOperationCompleted == null)) {
                this.findVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnfindVendorOperationCompleted);
            }
            this.InvokeAsync("findVendor", new object[] {
                        krapin,
                        vendgroup,
                        id}, this.findVendorOperationCompleted, userState);
        }
        
        private void OnfindVendorOperationCompleted(object arg) {
            if ((this.findVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.findVendorCompleted(this, new findVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("CallContextValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CICFPASVendorCreationService/createNewVendor", RequestElementName="CICFPASVendorCreationServiceCreateNewVendorRequest", RequestNamespace="http://tempuri.org", ResponseElementName="CICFPASVendorCreationServiceCreateNewVendorResponse", ResponseNamespace="http://tempuri.org", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("response", IsNullable=true)]
        public string createNewVendor(
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string accountNum, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string recordtype, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string firstname, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string physicalstreet, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string zipcode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string phone, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string email, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string taxWithholdCalculate, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string contractStatus, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string krapin, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string postalstreet, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string fax, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string url, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string vendgroup, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string Id, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string bankcode, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string bankaccnum, 
                    [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)] string bankbranchcode) {
            object[] results = this.Invoke("createNewVendor", new object[] {
                        accountNum,
                        recordtype,
                        firstname,
                        physicalstreet,
                        zipcode,
                        phone,
                        email,
                        taxWithholdCalculate,
                        contractStatus,
                        krapin,
                        postalstreet,
                        fax,
                        url,
                        vendgroup,
                        Id,
                        bankcode,
                        bankaccnum,
                        bankbranchcode});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void createNewVendorAsync(
                    string accountNum, 
                    string recordtype, 
                    string firstname, 
                    string physicalstreet, 
                    string zipcode, 
                    string phone, 
                    string email, 
                    string taxWithholdCalculate, 
                    string contractStatus, 
                    string krapin, 
                    string postalstreet, 
                    string fax, 
                    string url, 
                    string vendgroup, 
                    string Id, 
                    string bankcode, 
                    string bankaccnum, 
                    string bankbranchcode) {
            this.createNewVendorAsync(accountNum, recordtype, firstname, physicalstreet, zipcode, phone, email, taxWithholdCalculate, contractStatus, krapin, postalstreet, fax, url, vendgroup, Id, bankcode, bankaccnum, bankbranchcode, null);
        }
        
        /// <remarks/>
        public void createNewVendorAsync(
                    string accountNum, 
                    string recordtype, 
                    string firstname, 
                    string physicalstreet, 
                    string zipcode, 
                    string phone, 
                    string email, 
                    string taxWithholdCalculate, 
                    string contractStatus, 
                    string krapin, 
                    string postalstreet, 
                    string fax, 
                    string url, 
                    string vendgroup, 
                    string Id, 
                    string bankcode, 
                    string bankaccnum, 
                    string bankbranchcode, 
                    object userState) {
            if ((this.createNewVendorOperationCompleted == null)) {
                this.createNewVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OncreateNewVendorOperationCompleted);
            }
            this.InvokeAsync("createNewVendor", new object[] {
                        accountNum,
                        recordtype,
                        firstname,
                        physicalstreet,
                        zipcode,
                        phone,
                        email,
                        taxWithholdCalculate,
                        contractStatus,
                        krapin,
                        postalstreet,
                        fax,
                        url,
                        vendgroup,
                        Id,
                        bankcode,
                        bankaccnum,
                        bankbranchcode}, this.createNewVendorOperationCompleted, userState);
        }
        
        private void OncreateNewVendorOperationCompleted(object arg) {
            if ((this.createNewVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.createNewVendorCompleted(this, new createNewVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://schemas.microsoft.com/dynamics/2010/01/datacontracts")]
    [System.Xml.Serialization.XmlRootAttribute(Namespace="http://schemas.microsoft.com/dynamics/2010/01/datacontracts", IsNullable=true)]
    public partial class CallContext : System.Web.Services.Protocols.SoapHeader {
        
        private string companyField;
        
        private string languageField;
        
        private string logonAsUserField;
        
        private string messageIdField;
        
        private string partitionKeyField;
        
        private ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] propertyBagField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Company {
            get {
                return this.companyField;
            }
            set {
                this.companyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Language {
            get {
                return this.languageField;
            }
            set {
                this.languageField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string LogonAsUser {
            get {
                return this.logonAsUserField;
            }
            set {
                this.logonAsUserField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string MessageId {
            get {
                return this.messageIdField;
            }
            set {
                this.messageIdField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string PartitionKey {
            get {
                return this.partitionKeyField;
            }
            set {
                this.partitionKeyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlArrayAttribute(IsNullable=true)]
        [System.Xml.Serialization.XmlArrayItemAttribute("KeyValueOfstringstring", Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays", IsNullable=false)]
        public ArrayOfKeyValueOfstringstringKeyValueOfstringstring[] PropertyBag {
            get {
                return this.propertyBagField;
            }
            set {
                this.propertyBagField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.7.3190.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(AnonymousType=true, Namespace="http://schemas.microsoft.com/2003/10/Serialization/Arrays")]
    public partial class ArrayOfKeyValueOfstringstringKeyValueOfstringstring {
        
        private string keyField;
        
        private string valueField;
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Key {
            get {
                return this.keyField;
            }
            set {
                this.keyField = value;
            }
        }
        
        /// <remarks/>
        [System.Xml.Serialization.XmlElementAttribute(IsNullable=true)]
        public string Value {
            get {
                return this.valueField;
            }
            set {
                this.valueField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void updateVendorCompletedEventHandler(object sender, updateVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class updateVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal updateVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void findVendorCompletedEventHandler(object sender, findVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class findVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal findVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void createNewVendorCompletedEventHandler(object sender, createNewVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class createNewVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal createNewVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591