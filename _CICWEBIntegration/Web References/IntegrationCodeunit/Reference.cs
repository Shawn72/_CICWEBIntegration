//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace _CICWEBIntegration.IntegrationCodeunit {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="CICIntegrations_Binding", Namespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations")]
    public partial class CICIntegrations : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback FnSendVendorConfirmationDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnCreateNavVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPushVendorrDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnFindVendorfromNavOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnTestfindVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetVendorNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetAllVendorDetailsOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPushVendortoStageTestOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnTestCreateVendorOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnFindVendorfromAXOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnFindCreateVendorOnAXOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnFindCreateCustomerOnAXOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnPostPaymentJournalOnAXOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnGetCustomerDetailsfromNavOperationCompleted;
        
        private System.Threading.SendOrPostCallback FnReturnPaymentJournalDetailsOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public CICIntegrations() {
            this.Url = global::_CICWEBIntegration.Properties.Settings.Default._CICWEBIntegration_IntegrationCodeunit_CICIntegrations;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event FnSendVendorConfirmationDetailsCompletedEventHandler FnSendVendorConfirmationDetailsCompleted;
        
        /// <remarks/>
        public event FnCreateNavVendorCompletedEventHandler FnCreateNavVendorCompleted;
        
        /// <remarks/>
        public event FnPushVendorrDetailsCompletedEventHandler FnPushVendorrDetailsCompleted;
        
        /// <remarks/>
        public event FnFindVendorfromNavCompletedEventHandler FnFindVendorfromNavCompleted;
        
        /// <remarks/>
        public event FnTestfindVendorCompletedEventHandler FnTestfindVendorCompleted;
        
        /// <remarks/>
        public event FnGetVendorNameCompletedEventHandler FnGetVendorNameCompleted;
        
        /// <remarks/>
        public event FnGetAllVendorDetailsCompletedEventHandler FnGetAllVendorDetailsCompleted;
        
        /// <remarks/>
        public event FnPushVendortoStageTestCompletedEventHandler FnPushVendortoStageTestCompleted;
        
        /// <remarks/>
        public event FnTestCreateVendorCompletedEventHandler FnTestCreateVendorCompleted;
        
        /// <remarks/>
        public event FnFindVendorfromAXCompletedEventHandler FnFindVendorfromAXCompleted;
        
        /// <remarks/>
        public event FnFindCreateVendorOnAXCompletedEventHandler FnFindCreateVendorOnAXCompleted;
        
        /// <remarks/>
        public event FnFindCreateCustomerOnAXCompletedEventHandler FnFindCreateCustomerOnAXCompleted;
        
        /// <remarks/>
        public event FnPostPaymentJournalOnAXCompletedEventHandler FnPostPaymentJournalOnAXCompleted;
        
        /// <remarks/>
        public event FnGetCustomerDetailsfromNavCompletedEventHandler FnGetCustomerDetailsfromNavCompleted;
        
        /// <remarks/>
        public event FnReturnPaymentJournalDetailsCompletedEventHandler FnReturnPaymentJournalDetailsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CICIntegrations:FnSendVendorConfirmationD" +
            "etails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", ResponseElementName="FnSendVendorConfirmationDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnSendVendorConfirmationDetails(string pin, string customerGroup, string iDnumber) {
            object[] results = this.Invoke("FnSendVendorConfirmationDetails", new object[] {
                        pin,
                        customerGroup,
                        iDnumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnSendVendorConfirmationDetailsAsync(string pin, string customerGroup, string iDnumber) {
            this.FnSendVendorConfirmationDetailsAsync(pin, customerGroup, iDnumber, null);
        }
        
        /// <remarks/>
        public void FnSendVendorConfirmationDetailsAsync(string pin, string customerGroup, string iDnumber, object userState) {
            if ((this.FnSendVendorConfirmationDetailsOperationCompleted == null)) {
                this.FnSendVendorConfirmationDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnSendVendorConfirmationDetailsOperationCompleted);
            }
            this.InvokeAsync("FnSendVendorConfirmationDetails", new object[] {
                        pin,
                        customerGroup,
                        iDnumber}, this.FnSendVendorConfirmationDetailsOperationCompleted, userState);
        }
        
        private void OnFnSendVendorConfirmationDetailsOperationCompleted(object arg) {
            if ((this.FnSendVendorConfirmationDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnSendVendorConfirmationDetailsCompleted(this, new FnSendVendorConfirmationDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CICIntegrations:FnCreateNavVendor", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", ResponseElementName="FnCreateNavVendor_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnCreateNavVendor(
                    string accountNo, 
                    string fullname, 
                    string gender, 
                    string maritalstatus, 
                    string county, 
                    string phonenumber, 
                    string email, 
                    string idnumber, 
                    string bankaccountno, 
                    string bankaccountid, 
                    string krapin, 
                    string vendorgroup, 
                    string globaldimension1, 
                    string globaldimension2, 
                    string address, 
                    string vendortype) {
            object[] results = this.Invoke("FnCreateNavVendor", new object[] {
                        accountNo,
                        fullname,
                        gender,
                        maritalstatus,
                        county,
                        phonenumber,
                        email,
                        idnumber,
                        bankaccountno,
                        bankaccountid,
                        krapin,
                        vendorgroup,
                        globaldimension1,
                        globaldimension2,
                        address,
                        vendortype});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnCreateNavVendorAsync(
                    string accountNo, 
                    string fullname, 
                    string gender, 
                    string maritalstatus, 
                    string county, 
                    string phonenumber, 
                    string email, 
                    string idnumber, 
                    string bankaccountno, 
                    string bankaccountid, 
                    string krapin, 
                    string vendorgroup, 
                    string globaldimension1, 
                    string globaldimension2, 
                    string address, 
                    string vendortype) {
            this.FnCreateNavVendorAsync(accountNo, fullname, gender, maritalstatus, county, phonenumber, email, idnumber, bankaccountno, bankaccountid, krapin, vendorgroup, globaldimension1, globaldimension2, address, vendortype, null);
        }
        
        /// <remarks/>
        public void FnCreateNavVendorAsync(
                    string accountNo, 
                    string fullname, 
                    string gender, 
                    string maritalstatus, 
                    string county, 
                    string phonenumber, 
                    string email, 
                    string idnumber, 
                    string bankaccountno, 
                    string bankaccountid, 
                    string krapin, 
                    string vendorgroup, 
                    string globaldimension1, 
                    string globaldimension2, 
                    string address, 
                    string vendortype, 
                    object userState) {
            if ((this.FnCreateNavVendorOperationCompleted == null)) {
                this.FnCreateNavVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnCreateNavVendorOperationCompleted);
            }
            this.InvokeAsync("FnCreateNavVendor", new object[] {
                        accountNo,
                        fullname,
                        gender,
                        maritalstatus,
                        county,
                        phonenumber,
                        email,
                        idnumber,
                        bankaccountno,
                        bankaccountid,
                        krapin,
                        vendorgroup,
                        globaldimension1,
                        globaldimension2,
                        address,
                        vendortype}, this.FnCreateNavVendorOperationCompleted, userState);
        }
        
        private void OnFnCreateNavVendorOperationCompleted(object arg) {
            if ((this.FnCreateNavVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnCreateNavVendorCompleted(this, new FnCreateNavVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CICIntegrations:FnPushVendorrDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", ResponseElementName="FnPushVendorrDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnPushVendorrDetails(
                    string accountNo, 
                    string firstname, 
                    string middlename, 
                    string lastname, 
                    string gender, 
                    string maritalstatus, 
                    string country, 
                    string zipcode, 
                    string phonenumber, 
                    string email, 
                    string idnumber, 
                    string bankaccountno, 
                    string bankaccountid, 
                    string krapin, 
                    string vendorgroup, 
                    string vendortype) {
            this.Invoke("FnPushVendorrDetails", new object[] {
                        accountNo,
                        firstname,
                        middlename,
                        lastname,
                        gender,
                        maritalstatus,
                        country,
                        zipcode,
                        phonenumber,
                        email,
                        idnumber,
                        bankaccountno,
                        bankaccountid,
                        krapin,
                        vendorgroup,
                        vendortype});
        }
        
        /// <remarks/>
        public void FnPushVendorrDetailsAsync(
                    string accountNo, 
                    string firstname, 
                    string middlename, 
                    string lastname, 
                    string gender, 
                    string maritalstatus, 
                    string country, 
                    string zipcode, 
                    string phonenumber, 
                    string email, 
                    string idnumber, 
                    string bankaccountno, 
                    string bankaccountid, 
                    string krapin, 
                    string vendorgroup, 
                    string vendortype) {
            this.FnPushVendorrDetailsAsync(accountNo, firstname, middlename, lastname, gender, maritalstatus, country, zipcode, phonenumber, email, idnumber, bankaccountno, bankaccountid, krapin, vendorgroup, vendortype, null);
        }
        
        /// <remarks/>
        public void FnPushVendorrDetailsAsync(
                    string accountNo, 
                    string firstname, 
                    string middlename, 
                    string lastname, 
                    string gender, 
                    string maritalstatus, 
                    string country, 
                    string zipcode, 
                    string phonenumber, 
                    string email, 
                    string idnumber, 
                    string bankaccountno, 
                    string bankaccountid, 
                    string krapin, 
                    string vendorgroup, 
                    string vendortype, 
                    object userState) {
            if ((this.FnPushVendorrDetailsOperationCompleted == null)) {
                this.FnPushVendorrDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPushVendorrDetailsOperationCompleted);
            }
            this.InvokeAsync("FnPushVendorrDetails", new object[] {
                        accountNo,
                        firstname,
                        middlename,
                        lastname,
                        gender,
                        maritalstatus,
                        country,
                        zipcode,
                        phonenumber,
                        email,
                        idnumber,
                        bankaccountno,
                        bankaccountid,
                        krapin,
                        vendorgroup,
                        vendortype}, this.FnPushVendorrDetailsOperationCompleted, userState);
        }
        
        private void OnFnPushVendorrDetailsOperationCompleted(object arg) {
            if ((this.FnPushVendorrDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPushVendorrDetailsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CICIntegrations:FnFindVendorfromNav", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", ResponseElementName="FnFindVendorfromNav_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnFindVendorfromNav(string kRApin) {
            object[] results = this.Invoke("FnFindVendorfromNav", new object[] {
                        kRApin});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnFindVendorfromNavAsync(string kRApin) {
            this.FnFindVendorfromNavAsync(kRApin, null);
        }
        
        /// <remarks/>
        public void FnFindVendorfromNavAsync(string kRApin, object userState) {
            if ((this.FnFindVendorfromNavOperationCompleted == null)) {
                this.FnFindVendorfromNavOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnFindVendorfromNavOperationCompleted);
            }
            this.InvokeAsync("FnFindVendorfromNav", new object[] {
                        kRApin}, this.FnFindVendorfromNavOperationCompleted, userState);
        }
        
        private void OnFnFindVendorfromNavOperationCompleted(object arg) {
            if ((this.FnFindVendorfromNavCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnFindVendorfromNavCompleted(this, new FnFindVendorfromNavCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CICIntegrations:FnTestfindVendor", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", ResponseElementName="FnTestfindVendor_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnTestfindVendor(string kRApin) {
            object[] results = this.Invoke("FnTestfindVendor", new object[] {
                        kRApin});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnTestfindVendorAsync(string kRApin) {
            this.FnTestfindVendorAsync(kRApin, null);
        }
        
        /// <remarks/>
        public void FnTestfindVendorAsync(string kRApin, object userState) {
            if ((this.FnTestfindVendorOperationCompleted == null)) {
                this.FnTestfindVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnTestfindVendorOperationCompleted);
            }
            this.InvokeAsync("FnTestfindVendor", new object[] {
                        kRApin}, this.FnTestfindVendorOperationCompleted, userState);
        }
        
        private void OnFnTestfindVendorOperationCompleted(object arg) {
            if ((this.FnTestfindVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnTestfindVendorCompleted(this, new FnTestfindVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CICIntegrations:FnGetVendorName", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", ResponseElementName="FnGetVendorName_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetVendorName(string kRApin) {
            object[] results = this.Invoke("FnGetVendorName", new object[] {
                        kRApin});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetVendorNameAsync(string kRApin) {
            this.FnGetVendorNameAsync(kRApin, null);
        }
        
        /// <remarks/>
        public void FnGetVendorNameAsync(string kRApin, object userState) {
            if ((this.FnGetVendorNameOperationCompleted == null)) {
                this.FnGetVendorNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetVendorNameOperationCompleted);
            }
            this.InvokeAsync("FnGetVendorName", new object[] {
                        kRApin}, this.FnGetVendorNameOperationCompleted, userState);
        }
        
        private void OnFnGetVendorNameOperationCompleted(object arg) {
            if ((this.FnGetVendorNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetVendorNameCompleted(this, new FnGetVendorNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CICIntegrations:FnGetAllVendorDetails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", ResponseElementName="FnGetAllVendorDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetAllVendorDetails(string kRApin) {
            object[] results = this.Invoke("FnGetAllVendorDetails", new object[] {
                        kRApin});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetAllVendorDetailsAsync(string kRApin) {
            this.FnGetAllVendorDetailsAsync(kRApin, null);
        }
        
        /// <remarks/>
        public void FnGetAllVendorDetailsAsync(string kRApin, object userState) {
            if ((this.FnGetAllVendorDetailsOperationCompleted == null)) {
                this.FnGetAllVendorDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetAllVendorDetailsOperationCompleted);
            }
            this.InvokeAsync("FnGetAllVendorDetails", new object[] {
                        kRApin}, this.FnGetAllVendorDetailsOperationCompleted, userState);
        }
        
        private void OnFnGetAllVendorDetailsOperationCompleted(object arg) {
            if ((this.FnGetAllVendorDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetAllVendorDetailsCompleted(this, new FnGetAllVendorDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CICIntegrations:FnPushVendortoStageTest", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", ResponseElementName="FnPushVendortoStageTest_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public bool FnPushVendortoStageTest(string kRAPin) {
            object[] results = this.Invoke("FnPushVendortoStageTest", new object[] {
                        kRAPin});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void FnPushVendortoStageTestAsync(string kRAPin) {
            this.FnPushVendortoStageTestAsync(kRAPin, null);
        }
        
        /// <remarks/>
        public void FnPushVendortoStageTestAsync(string kRAPin, object userState) {
            if ((this.FnPushVendortoStageTestOperationCompleted == null)) {
                this.FnPushVendortoStageTestOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPushVendortoStageTestOperationCompleted);
            }
            this.InvokeAsync("FnPushVendortoStageTest", new object[] {
                        kRAPin}, this.FnPushVendortoStageTestOperationCompleted, userState);
        }
        
        private void OnFnPushVendortoStageTestOperationCompleted(object arg) {
            if ((this.FnPushVendortoStageTestCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPushVendortoStageTestCompleted(this, new FnPushVendortoStageTestCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CICIntegrations:FnTestCreateVendor", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", ResponseElementName="FnTestCreateVendor_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnTestCreateVendor(string kRApin) {
            object[] results = this.Invoke("FnTestCreateVendor", new object[] {
                        kRApin});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnTestCreateVendorAsync(string kRApin) {
            this.FnTestCreateVendorAsync(kRApin, null);
        }
        
        /// <remarks/>
        public void FnTestCreateVendorAsync(string kRApin, object userState) {
            if ((this.FnTestCreateVendorOperationCompleted == null)) {
                this.FnTestCreateVendorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnTestCreateVendorOperationCompleted);
            }
            this.InvokeAsync("FnTestCreateVendor", new object[] {
                        kRApin}, this.FnTestCreateVendorOperationCompleted, userState);
        }
        
        private void OnFnTestCreateVendorOperationCompleted(object arg) {
            if ((this.FnTestCreateVendorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnTestCreateVendorCompleted(this, new FnTestCreateVendorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CICIntegrations:FnFindVendorfromAX", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", ResponseElementName="FnFindVendorfromAX_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnFindVendorfromAX(string kRApin, string vendorGroup, string idNumber) {
            object[] results = this.Invoke("FnFindVendorfromAX", new object[] {
                        kRApin,
                        vendorGroup,
                        idNumber});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnFindVendorfromAXAsync(string kRApin, string vendorGroup, string idNumber) {
            this.FnFindVendorfromAXAsync(kRApin, vendorGroup, idNumber, null);
        }
        
        /// <remarks/>
        public void FnFindVendorfromAXAsync(string kRApin, string vendorGroup, string idNumber, object userState) {
            if ((this.FnFindVendorfromAXOperationCompleted == null)) {
                this.FnFindVendorfromAXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnFindVendorfromAXOperationCompleted);
            }
            this.InvokeAsync("FnFindVendorfromAX", new object[] {
                        kRApin,
                        vendorGroup,
                        idNumber}, this.FnFindVendorfromAXOperationCompleted, userState);
        }
        
        private void OnFnFindVendorfromAXOperationCompleted(object arg) {
            if ((this.FnFindVendorfromAXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnFindVendorfromAXCompleted(this, new FnFindVendorfromAXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CICIntegrations:FnFindCreateVendorOnAX", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", ResponseElementName="FnFindCreateVendorOnAX_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnFindCreateVendorOnAX(string kRApin) {
            object[] results = this.Invoke("FnFindCreateVendorOnAX", new object[] {
                        kRApin});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnFindCreateVendorOnAXAsync(string kRApin) {
            this.FnFindCreateVendorOnAXAsync(kRApin, null);
        }
        
        /// <remarks/>
        public void FnFindCreateVendorOnAXAsync(string kRApin, object userState) {
            if ((this.FnFindCreateVendorOnAXOperationCompleted == null)) {
                this.FnFindCreateVendorOnAXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnFindCreateVendorOnAXOperationCompleted);
            }
            this.InvokeAsync("FnFindCreateVendorOnAX", new object[] {
                        kRApin}, this.FnFindCreateVendorOnAXOperationCompleted, userState);
        }
        
        private void OnFnFindCreateVendorOnAXOperationCompleted(object arg) {
            if ((this.FnFindCreateVendorOnAXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnFindCreateVendorOnAXCompleted(this, new FnFindCreateVendorOnAXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CICIntegrations:FnFindCreateCustomerOnAX", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", ResponseElementName="FnFindCreateCustomerOnAX_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnFindCreateCustomerOnAX(string kRApin) {
            object[] results = this.Invoke("FnFindCreateCustomerOnAX", new object[] {
                        kRApin});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnFindCreateCustomerOnAXAsync(string kRApin) {
            this.FnFindCreateCustomerOnAXAsync(kRApin, null);
        }
        
        /// <remarks/>
        public void FnFindCreateCustomerOnAXAsync(string kRApin, object userState) {
            if ((this.FnFindCreateCustomerOnAXOperationCompleted == null)) {
                this.FnFindCreateCustomerOnAXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnFindCreateCustomerOnAXOperationCompleted);
            }
            this.InvokeAsync("FnFindCreateCustomerOnAX", new object[] {
                        kRApin}, this.FnFindCreateCustomerOnAXOperationCompleted, userState);
        }
        
        private void OnFnFindCreateCustomerOnAXOperationCompleted(object arg) {
            if ((this.FnFindCreateCustomerOnAXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnFindCreateCustomerOnAXCompleted(this, new FnFindCreateCustomerOnAXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CICIntegrations:FnPostPaymentJournalOnAX", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", ResponseElementName="FnPostPaymentJournalOnAX_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void FnPostPaymentJournalOnAX(string journalType, [System.Xml.Serialization.XmlElementAttribute(DataType="date")] System.DateTime tranxTime, string ledgerAccount, string dimensions, string invoice, string description, decimal amountDebit, decimal amountCredit, string offsetAccount, string offsetDimensions, string methodofPayment) {
            this.Invoke("FnPostPaymentJournalOnAX", new object[] {
                        journalType,
                        tranxTime,
                        ledgerAccount,
                        dimensions,
                        invoice,
                        description,
                        amountDebit,
                        amountCredit,
                        offsetAccount,
                        offsetDimensions,
                        methodofPayment});
        }
        
        /// <remarks/>
        public void FnPostPaymentJournalOnAXAsync(string journalType, System.DateTime tranxTime, string ledgerAccount, string dimensions, string invoice, string description, decimal amountDebit, decimal amountCredit, string offsetAccount, string offsetDimensions, string methodofPayment) {
            this.FnPostPaymentJournalOnAXAsync(journalType, tranxTime, ledgerAccount, dimensions, invoice, description, amountDebit, amountCredit, offsetAccount, offsetDimensions, methodofPayment, null);
        }
        
        /// <remarks/>
        public void FnPostPaymentJournalOnAXAsync(string journalType, System.DateTime tranxTime, string ledgerAccount, string dimensions, string invoice, string description, decimal amountDebit, decimal amountCredit, string offsetAccount, string offsetDimensions, string methodofPayment, object userState) {
            if ((this.FnPostPaymentJournalOnAXOperationCompleted == null)) {
                this.FnPostPaymentJournalOnAXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnPostPaymentJournalOnAXOperationCompleted);
            }
            this.InvokeAsync("FnPostPaymentJournalOnAX", new object[] {
                        journalType,
                        tranxTime,
                        ledgerAccount,
                        dimensions,
                        invoice,
                        description,
                        amountDebit,
                        amountCredit,
                        offsetAccount,
                        offsetDimensions,
                        methodofPayment}, this.FnPostPaymentJournalOnAXOperationCompleted, userState);
        }
        
        private void OnFnPostPaymentJournalOnAXOperationCompleted(object arg) {
            if ((this.FnPostPaymentJournalOnAXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnPostPaymentJournalOnAXCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CICIntegrations:FnGetCustomerDetailsfromN" +
            "av", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", ResponseElementName="FnGetCustomerDetailsfromNav_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnGetCustomerDetailsfromNav(string kRApin) {
            object[] results = this.Invoke("FnGetCustomerDetailsfromNav", new object[] {
                        kRApin});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnGetCustomerDetailsfromNavAsync(string kRApin) {
            this.FnGetCustomerDetailsfromNavAsync(kRApin, null);
        }
        
        /// <remarks/>
        public void FnGetCustomerDetailsfromNavAsync(string kRApin, object userState) {
            if ((this.FnGetCustomerDetailsfromNavOperationCompleted == null)) {
                this.FnGetCustomerDetailsfromNavOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnGetCustomerDetailsfromNavOperationCompleted);
            }
            this.InvokeAsync("FnGetCustomerDetailsfromNav", new object[] {
                        kRApin}, this.FnGetCustomerDetailsfromNavOperationCompleted, userState);
        }
        
        private void OnFnGetCustomerDetailsfromNavOperationCompleted(object arg) {
            if ((this.FnGetCustomerDetailsfromNavCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnGetCustomerDetailsfromNavCompleted(this, new FnGetCustomerDetailsfromNavCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("urn:microsoft-dynamics-schemas/codeunit/CICIntegrations:FnReturnPaymentJournalDet" +
            "ails", RequestNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", ResponseElementName="FnReturnPaymentJournalDetails_Result", ResponseNamespace="urn:microsoft-dynamics-schemas/codeunit/CICIntegrations", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("return_value")]
        public string FnReturnPaymentJournalDetails(string pVNumber, string journalType) {
            object[] results = this.Invoke("FnReturnPaymentJournalDetails", new object[] {
                        pVNumber,
                        journalType});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void FnReturnPaymentJournalDetailsAsync(string pVNumber, string journalType) {
            this.FnReturnPaymentJournalDetailsAsync(pVNumber, journalType, null);
        }
        
        /// <remarks/>
        public void FnReturnPaymentJournalDetailsAsync(string pVNumber, string journalType, object userState) {
            if ((this.FnReturnPaymentJournalDetailsOperationCompleted == null)) {
                this.FnReturnPaymentJournalDetailsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnFnReturnPaymentJournalDetailsOperationCompleted);
            }
            this.InvokeAsync("FnReturnPaymentJournalDetails", new object[] {
                        pVNumber,
                        journalType}, this.FnReturnPaymentJournalDetailsOperationCompleted, userState);
        }
        
        private void OnFnReturnPaymentJournalDetailsOperationCompleted(object arg) {
            if ((this.FnReturnPaymentJournalDetailsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.FnReturnPaymentJournalDetailsCompleted(this, new FnReturnPaymentJournalDetailsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnSendVendorConfirmationDetailsCompletedEventHandler(object sender, FnSendVendorConfirmationDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnSendVendorConfirmationDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnSendVendorConfirmationDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnCreateNavVendorCompletedEventHandler(object sender, FnCreateNavVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnCreateNavVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnCreateNavVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnPushVendorrDetailsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnFindVendorfromNavCompletedEventHandler(object sender, FnFindVendorfromNavCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnFindVendorfromNavCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnFindVendorfromNavCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnTestfindVendorCompletedEventHandler(object sender, FnTestfindVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnTestfindVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnTestfindVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnGetVendorNameCompletedEventHandler(object sender, FnGetVendorNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetVendorNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetVendorNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnGetAllVendorDetailsCompletedEventHandler(object sender, FnGetAllVendorDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetAllVendorDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetAllVendorDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnPushVendortoStageTestCompletedEventHandler(object sender, FnPushVendortoStageTestCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnPushVendortoStageTestCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnPushVendortoStageTestCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnTestCreateVendorCompletedEventHandler(object sender, FnTestCreateVendorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnTestCreateVendorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnTestCreateVendorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnFindVendorfromAXCompletedEventHandler(object sender, FnFindVendorfromAXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnFindVendorfromAXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnFindVendorfromAXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnFindCreateVendorOnAXCompletedEventHandler(object sender, FnFindCreateVendorOnAXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnFindCreateVendorOnAXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnFindCreateVendorOnAXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnFindCreateCustomerOnAXCompletedEventHandler(object sender, FnFindCreateCustomerOnAXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnFindCreateCustomerOnAXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnFindCreateCustomerOnAXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnPostPaymentJournalOnAXCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnGetCustomerDetailsfromNavCompletedEventHandler(object sender, FnGetCustomerDetailsfromNavCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnGetCustomerDetailsfromNavCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnGetCustomerDetailsfromNavCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    public delegate void FnReturnPaymentJournalDetailsCompletedEventHandler(object sender, FnReturnPaymentJournalDetailsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3190.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class FnReturnPaymentJournalDetailsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal FnReturnPaymentJournalDetailsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591